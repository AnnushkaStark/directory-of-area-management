"""empty message

Revision ID: ada8764f013f
Revises:
Create Date: 2025-07-31 18:22:46.922499

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ada8764f013f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "room_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_room_type_id"), "room_type", ["id"], unique=False)
    op.create_index(
        op.f("ix_room_type_uid"), "room_type", ["uid"], unique=True
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_index(op.f("ix_user_uid"), "user", ["uid"], unique=True)
    op.create_table(
        "account",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("specialization", sa.String(), nullable=True),
        sa.Column("work_schedule", sa.Text(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(op.f("ix_account_id"), "account", ["id"], unique=False)
    op.create_index(op.f("ix_account_uid"), "account", ["uid"], unique=True)
    op.create_table(
        "room",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("floor_number", sa.Integer(), nullable=False),
        sa.Column("room_number", sa.Integer(), nullable=False),
        sa.Column("area", sa.Float(), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["type_id"], ["room_type.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("type_id"),
    )
    op.create_index(op.f("ix_room_id"), "room", ["id"], unique=False)
    op.create_index(op.f("ix_room_uid"), "room", ["uid"], unique=True)
    op.create_table(
        "room_users",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("room_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["room_id"], ["room.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "room_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("room_users")
    op.drop_index(op.f("ix_room_uid"), table_name="room")
    op.drop_index(op.f("ix_room_id"), table_name="room")
    op.drop_table("room")
    op.drop_index(op.f("ix_account_uid"), table_name="account")
    op.drop_index(op.f("ix_account_id"), table_name="account")
    op.drop_table("account")
    op.drop_index(op.f("ix_user_uid"), table_name="user")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_room_type_uid"), table_name="room_type")
    op.drop_index(op.f("ix_room_type_id"), table_name="room_type")
    op.drop_table("room_type")
    # ### end Alembic commands ###
